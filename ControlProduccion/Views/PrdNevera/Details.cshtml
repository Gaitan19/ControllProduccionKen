@using ControlProduccion.ViewModel;
@model PrdNeveraViewModel;
@{
    ViewData["Title"] = "Detalle Produccion Nevera";
}

<div class="col-md-8 offset-md-2">
    <div class="ibox ">
        <div class="ibox-title">
            <h5>@ViewData["Title"]</h5>

        </div>
        <div class="ibox-content">
            <form id="frmProduccion" autocomplete="off">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="form-group">
                    <label asp-for="IdUsuarios"></label>
                    <select disabled="disabled" id="IdUsuarios" multiple name="IdUsuarios" asp-for="IdUsuarios" class="form-control select2" asp-items="Model.Operarios">
                    </select>
                    <span asp-validation-for="IdUsuarios" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="IdMaquina"></label>
                    <select disabled="disabled" id="IdMaquina" name="IdMaquina" asp-for="IdMaquina" class="form-control" asp-items="Model.Maquinas">
                        @*  <option>- Seleccione una maquina -</option> *@
                    </select>
                    <span asp-validation-for="IdMaquina" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Fecha"></label>
                    <input asp-for="Fecha" readonly="readonly" class="form-control" />
                    <span asp-validation-for="Fecha" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="HoraInicio"></label>
                    <input readonly="readonly" asp-for="HoraInicio" class="form-control" />
                    <span asp-validation-for="HoraInicio" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="HoraFin"></label>
                    <input readonly="readonly" asp-for="HoraFin" class="form-control" />
                    <span asp-validation-for="HoraFin" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="TiempoParo"></label>
                    <input readonly="readonly" asp-for="TiempoParo" class="form-control" />
                    <span asp-validation-for="TiempoParo" class="text-danger"></span>
                </div>
                <div class="hr-line-dashed"></div>
                <div class="form-group row">

                    @*         <a data-toggle='modal' href='#modal-Detalle' id="btnAgregarDetalle" class="btn btn-info btn-outline">
                        <i class="fa fa-plus"></i> Agregar Nuevo Detalle
                    </a> *@


                    <div class="col-sm-12" style="max-height: 300px; overflow: scroll">
                        <h4 id="hdrVV" runat="server">Detalle Produccion</h4>

                        <table id="tblProduccion" class="table table-bordered table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>Item</th>
                                    <th>Articulo</th>
                                    <th>Cantidad Producida</th>
                                    <th>Cantidad No Conforme</th>
                                    <th>Tipo Fabricación</th>
                                    <th>Número Pedido</th>
                                   

                                </tr>
                            </thead>
                            <tbody>
                                @*       <tr>

                                    <td>Panel Térmico 1.5</td>
                                    <td>120</td>
                                    <td>5</td>
                                    <td>Manual</td>
                                    <td>4521</td>


                                </tr> *@
                                @foreach (var detalle in Model.DetPrdNeveras)
                                {
                                    <tr>
                                        <td style='display:none;'>@detalle.Id</td>
                                        <td>@detalle.Posicion</td>
                                        <td>@detalle.Articulo</td>
                                        <td>@detalle.CantidadNoConforme</td>
                                        <td>@detalle.CantidadNoConforme</td>
                                        <td>@detalle.TipoFabricacion</td>
                                        <td>@detalle.NumeroPedido</td>
                                   
                                    </tr>
                                }

                            </tbody>
                        </table>

                    </div>
                </div>
                <div class="hr-line-dashed"></div>
            
             
            

                <div class="form-group">
                    <label asp-for="Observaciones"></label>
                    <textarea readonly="readonly" asp-for="Observaciones" class="form-control"></textarea>
                    <span asp-validation-for="Observaciones" class="text-danger"></span>
                </div>

                <div class="form-group">
                    <label asp-for="NotaSupervisor"></label>
                    @if (User.IsInRole("Supervisor"))
                    {
                        @if (Model.AprobadoSupervisor != true)
                        {
                            <textarea id="txtNotaSupervisor" asp-for="NotaSupervisor" class="form-control" rows="3" placeholder="Ingrese la nota del supervisor..."></textarea>
                            <span asp-validation-for="NotaSupervisor" class="text-danger"></span>
                        }
                        else
                        {
                            <textarea asp-for="NotaSupervisor" class="form-control" rows="3" readonly></textarea>
                        }
                    }
                    else
                    {
                        <textarea asp-for="NotaSupervisor" class="form-control" rows="3" readonly></textarea>
                    }
                </div>

                <div class="hr-line-dashed"></div>


                @*    <button type="submit" class="btn btn-primary">Guardar</button> *@
                <button type="button" class="btn btn-dark" onclick="location.href='@Url.Action("Index", "PrdNevera")'">Regresar</button>
              
                @if (User.IsInRole("Supervisor") && Model.AprobadoSupervisor != true )
                {
                    <button id="btnGuardarNota" type="button" class="btn btn-primary">Guardar Nota</button>
                    <button  type="button" class="btn btn-danger" onclick="validar(@Model.Id)">Validar</button>
                }
                else
                {
                    <button type="button" class="btn btn-success">Validado</button>
                }
            </form>


        </div>
    </div>
</div>





@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>

                 function validarUnDecimal(input) {
          // Elimina caracteres no válidos (solo dígitos y punto)
          let valor = input.value.replace(/[^0-9.]/g, '');

          // Si hay más de un punto, conserva solo el primero
          let partes = valor.split('.');
          if (partes.length > 2) {
            valor = partes[0] + '.' + partes[1];
          }

          // Si existe el punto, limita la parte decimal a 1 dígito
          if (valor.includes('.')) {
            let [entero, decimal] = valor.split('.');
            decimal = decimal.substring(0, 1); // conserva solo el primer dígito
            valor = entero + '.' + decimal;
          }

          input.value = valor;
        }

        $(document).ready(function () {
            $('#btnGuardarNota').click(function() {
                var notaSupervisor = $('#txtNotaSupervisor').val();
                var token = $('input[name="__RequestVerificationToken"]').val();
                var id = @Model.Id;

                $.ajax({
                    url: '@Url.Action("SaveNotaSupervisor", "PrdNevera")',
                    type: 'POST',
                    data: {
                        id: id,
                        notaSupervisor: notaSupervisor
                    },
                    headers: {
                        'RequestVerificationToken': token
                    },
                    success: function(response) {
                        if (response && response.success) {
                            alert('Nota guardada exitosamente');
                        } else {
                            alert(response.message || 'Error al guardar la nota');
                        }
                    },
                    error: function() {
                        alert('Error al guardar la nota');
                    }
                });
            });
        });







                           $("#IdUsuarios").select2({
            placeholder: "- Selecciona los operarios -",
            allowClear:true
        });

                          $("#IdMaquina").select2({
            placeholder: "- Seleccione una maquina -",
            allowClear:true
        });










                 $(document).on('click', '#btnValidarPrdAlambre', function(e) {
            e.preventDefault(); // Evita el comportamiento por defecto del enlace

            // Guarda la referencia del botón clickeado
            var $btn = $(this);
            // Obtiene la fila correspondiente
            var $row = $btn.closest('tr');
            // Obtiene el valor del ID (la primera celda oculta)
            var id = $row.find('td:first').text().trim();

            // Ejecuta la petición AJAX
            $.ajax({
                        url: '/PrdCerchaCovintec/ValidarPrdAlambre', // Reemplaza con la URL de tu endpoint
                type: 'POST',       // O 'GET', según lo requiera tu backend
                data: { id: id },
                success: function(validado) {
                    // Suponiendo que 'validado' es un booleano retornado por el backend
                    if (validado === true || validado === "true") {
                        // Actualiza el ícono para indicar validado
                        $btn.find('i')
                            .removeClass('fa-times text-danger')
                            .addClass('fa-check text-success');
                    } else {
                        // Actualiza el ícono para indicar no validado
                        $btn.find('i')
                            .removeClass('fa-check text-success')
                            .addClass('fa-times text-danger');
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error al actualizar la validación:', error);
                }
            });
        });

            // Delegación de eventos para manejar clicks en btnValidarPrd, incluso si se agregan dinámicamente
        $(document).on('click', '#btnValidarPrd', function(e) {
            e.preventDefault(); // Evita el comportamiento por defecto del enlace

            // Guarda la referencia del botón clickeado
            var $btn = $(this);
            // Obtiene la fila correspondiente
            var $row = $btn.closest('tr');
            // Obtiene el valor del ID (la primera celda oculta)
            var id = $row.find('td:first').text().trim();

            // Ejecuta la petición AJAX
            $.ajax({
                    url: '/PrdCerchaCovintec/ValidarPrd', // Reemplaza con la URL de tu endpoint para producción
                type: 'POST',                // O 'GET', según lo requiera tu backend
                data: { id: id },
                success: function(validado) {
                    // Suponiendo que 'validado' es un booleano retornado por el backend
                    if (validado === true || validado === "true") {
                        // Actualiza el ícono para indicar validado
                        $btn.find('i')
                            .removeClass('fa-times text-danger')
                            .addClass('fa-check text-success');
                    } else {
                        // Actualiza el ícono para indicar no validado
                        $btn.find('i')
                            .removeClass('fa-check text-success')
                            .addClass('fa-times text-danger');
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error al actualizar la validación:', error);
                }
            });
        });


             function validar(id) {
            if (confirm("¿Está seguro de que desea validar esta producción?")) {
                $.ajax({
                    url: '@Url.Action("ValidarPrd", "PrdNevera")',
                    type: 'POST',
                    data: { id: id },
                    success: function(response) {
                        if (response) {
                            alert("Producción validada exitosamente.");
                            location.reload();
                        } else {
                            alert("Error al validar la producción, contacte a soporte.");
                        }
                    },
                    error: function(xhr, status, error) {
                        alert("Error al procesar la solicitud: " + error);
                    }
                });
            }
        }


    </script>
}

