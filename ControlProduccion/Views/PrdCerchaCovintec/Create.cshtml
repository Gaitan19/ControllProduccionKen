@using ControlProduccion.ViewModel;
@model PrdCerchaCovintecViewModel;
@{
    ViewData["Title"] = "Ingresar Produccion Cercha Covintec";
}

<div class="col-md-8 offset-md-2">
    <div class="ibox ">
        <div class="ibox-title">
            <h5>@ViewData["Title"]</h5>

        </div>
        <div class="ibox-content">
            <form id="frmProduccion" method="post" autocomplete="off">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })


                <div class="form-group">
                    <label asp-for="IdUsuarios"></label>
                    <select id="IdUsuarios" multiple name="IdUsuarios" asp-for="IdUsuarios" class="form-control select2" asp-items="Model.Operarios">
                    </select>
                    <span asp-validation-for="IdUsuarios" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="IdMaquina"></label>
                    <select id="IdMaquina" name="IdMaquina" asp-for="IdMaquina" class="form-control" asp-items="Model.Maquinas">
                        @*  <option>- Seleccione una maquina -</option> *@
                    </select>
                    <span asp-validation-for="IdMaquina" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Fecha"></label>
                    <input asp-for="Fecha" class="form-control" />
                    <span asp-validation-for="Fecha" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ConteoInicial"></label>
                    <input asp-for="ConteoInicial" class="form-control" type="number" step="1" min="0" oninput="validarSoloEnteros(this)" />
                    <span asp-validation-for="ConteoInicial" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="ConteoFinal"></label>
                    <input asp-for="ConteoFinal" class="form-control" type="number" step="1" min="0" oninput="validarSoloEnteros(this)" />
                    <span asp-validation-for="ConteoFinal" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="TiempoParo"></label>
                    <input asp-for="TiempoParo" class="form-control" />
                    <span asp-validation-for="TiempoParo" class="text-danger"></span>
                </div>
                <div class="hr-line-dashed"></div>
                <div class="form-group row">

                    <a data-toggle='modal' href='#modal-Detalle' id="btnAgregarDetalle" class="btn btn-info btn-outline">
                        <i class="fa fa-plus"></i> Agregar Nuevo Detalle
                    </a>


                    <div class="col-sm-12" style="max-height: 300px; overflow: scroll">
                        <h4 id="hdrVV" runat="server">Detalle Produccion</h4>

                        <table id="tblProduccion" class="table table-bordered table-hover">
                            <thead class="table-light">
                                <tr>

                                    <th>Articulo</th>
                                    <th>Cantidad Producida</th>
                                    <th>Cantidad No Conforme</th>
                                    <th>Tipo Fabricación</th>
                                    <th>Número Pedido</th>


                                </tr>
                            </thead>
                            <tbody>
                                @*       <tr>

                                    <td>Panel Térmico 1.5</td>
                                    <td>120</td>
                                    <td>5</td>
                                    <td>Manual</td>
                                    <td>4521</td>


                                </tr> *@

                            </tbody>
                        </table>

                    </div>
                </div>
                <div class="hr-line-dashed"></div>
                <div class="form-group row">
                    <a data-toggle='modal' href='#modal-DetalleAlambre' id="btnAgregarDetalleAlambre" class="btn btn-info btn-outline">
                        <i class="fa fa-plus"></i> Agregar Alambre
                    </a>
                    <div class="col-sm-12" style="max-height: 300px; overflow: scroll">
                        <h4 id="hdrVV" runat="server">Detalle Alambres</h4>

                        <table id="tblAlambreProduccion" class="table table-bordered table-hover">
                            <thead class="table-light">
                                <tr>
                                    <th>Numero Alambre</th>
                                    <th>Peso Alambre</th>
                                   

                                </tr>
                            </thead>
                            <tbody>
                                @*       <tr>
                                    <td>1</td>
                                    <td>2</td>
                                    <td>3</td>


                                </tr> *@


                            </tbody>
                        </table>

                    </div>
                </div>
                <div class="hr-line-dashed"></div>
                <div class="form-group">
                    <label asp-for="MermaAlambre"></label>
                    <input asp-for="MermaAlambre" class="form-control" />
                    <span asp-validation-for="MermaAlambre" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Observaciones"></label>
                    <textarea asp-for="Observaciones" class="form-control"></textarea>
                    <span asp-validation-for="Observaciones" class="text-danger"></span>
                </div>


                <button type="submit" class="btn btn-primary">Guardar</button>
                <button type="button"
                        id="btnRegresar"
                        class="btn btn-dark"
                        data-url="@Url.Action("Index", "Home")">
                    Regresar
                </button>
            </form>
            @*     -----modal para agregar detalle prd------ *@
            <div id="modal-Detalle" class="modal fade" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-body">
                            <form id="frmDetPrd">
                                <input type="hidden" name="uid" value="<%=idx%>" />
                                <h3>Nuevo Detalle</h3>
                                <hr />

                                <div class="mb-3">
                                    <label class="form-label">Artículo</label>
                                    <select id="IdArticulo" name="IdArticulo" class="form-control" asp-items="Model.CatalogoCercha">
                                        <option value="">-- Selecione un articulo --</option>
                                    </select>
                                    <span class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label for="CantidadProducida" class="form-label">Cantidad Producida</label>
                                    <input oninput="this.value = this.value.replace(/[^0-9\-]/g, '');" step="1" min="0" type="number" id="CantidadProducida" name="CantidadProducida" class="form-control" value="" />
                                    <span class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label for="CantidadNoConforme" class="form-label">Cantidad No Conforme</label>
                                    <input oninput="this.value = this.value.replace(/[^0-9\-]/g, '');" step="1" min="0" type="number" id="CantidadNoConforme" name="CantidadNoConforme" class="form-control" value="" />
                                    <span class="text-danger"></span>
                                </div>

                                <div class="mb-3">
                                    <label class="form-label">Tipo Fabricación</label>
                                    <select id="IdTipoFabricacion" name="IdTipoFabricacion" class="form-control" asp-items="Model.TiposFabricacion">
                                        <option value="">-- Selecione un Tipo Fabricacion --</option>
                                    </select>
                                    <span class="text-danger"></span>
                                </div>

                                <div class="mb-3" id="divNumeroPedido" style="display:none">
                                    <label for="NumeroPedido" class="form-label">Número Pedido</label>
                                    <input oninput="this.value = this.value.replace(/[^0-9\-]/g, '');" step="1" min="0" type="number" id="NumeroPedido" name="NumeroPedido" class="form-control" value="" />
                                    <span class="text-danger"></span>
                                </div>
                            </form>

                            <button id="btnGuardarDetPrd" type="button" class="btn btn-primary">Agregar</button>
                            <button type="button" class="btn  btn-dark" data-dismiss="modal">Cancelar</button>
                            <br />
                            <p id="spnbtnGuardarDetPrd" class="text-sm text-danger"></p>
                        </div>
                    </div>
                </div>
            </div>

            @*     -----modal para agregar detalle alambre prd------ *@

            <div id="modal-DetalleAlambre" class="modal fade" aria-hidden="true">
                <div class="modal-dialog">
                    <div class="modal-content">
                        <div class="modal-body">
                            <form id="frmDetAlambre">
                                <input type="hidden" name="uid" value="<%=idx%>" />
                                <h3>Nuevo Alambre Detalle</h3>
                                <hr />

                                <div class="form-group">
                                    <label for="NumeroAlambre">Número de Alambre</label>
                                    <input oninput="this.value = this.value.replace(/[^0-9\-]/g, '');" step="1" min="0" id="NumeroAlambre" name="NumeroAlambre" class="form-control" value="" />
                                    <span class="text-danger"></span>
                                </div>
                                <div class="form-group">
                                    <label for="PesoAlambre">Peso del Alambre</label>
                                    <input oninput="validarUnDecimal(this)" type="text" step="0.11" min="0" id="PesoAlambre" name="PesoAlambre" class="form-control" value="" />
                                    <span class="text-danger"></span>
                                </div>


                            </form>

                            <button id="btnGuardarDetAlalmbre" type="button" class="btn btn-primary">Agregar</button>
                            <button type="button" class="btn  btn-dark" data-dismiss="modal">Cancelar</button>
                            <br />
                            <p id="spnBtnDetAlalmbre" class="text-sm text-danger"></p>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
</div>





@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }

    <script>

                    // ─────────── AUTOSAVE / RESTORE /PREVENT EXIT (MEJORADO) ───────────
            const DRAFT_KEY = 'draft-prdCerchaCovintec'; // Clave única para esta vista

            function backupForm() {
                const formArr = $('#frmProduccion').serializeArray();
                // Guardar también el contenido HTML de ambas tablas
                const detalleHtml = $('#tblProduccion tbody').html();
                const alambreHtml = $('#tblAlambreProduccion tbody').html();
                localStorage.setItem(DRAFT_KEY,
                    JSON.stringify({ 
                        form: formArr, 
                        detalleHtml: detalleHtml,
                        alambreHtml: alambreHtml 
                    })
                );
            }

               function restoreIfExists() {
            const draftStr = localStorage.getItem(DRAFT_KEY);
            if (!draftStr) return;
            if (confirm('Se encontró un borrador sin guardar. ¿Deseas restaurarlo?')) {
                const draft = JSON.parse(draftStr);

                // Agrupar valores por nombre de campo
                const formMap = draft.form.reduce((acc, { name, value }) => {
                    acc[name] = acc[name] || [];
                    acc[name].push(value);
                    return acc;
                }, {});

                // Restaurar cada campo, usando array para selects múltiples
                Object.entries(formMap).forEach(([name, values]) => {
                    const $el = $('[name="' + name + '"]');
                    const valToSet = $el.prop('multiple') ? values : values[0];
                    if ($el.hasClass('select2-hidden-accessible')) {
                        $el.val(valToSet).trigger('change');
                    } else {
                        $el.val(valToSet);
                    }
                });

                // Restaurar contenido de las tablas
                if (draft.detalleHtml) {
                    $('#tblProduccion tbody').html(draft.detalleHtml);
                }
                if (draft.alambreHtml) {
                    $('#tblAlambreProduccion tbody').html(draft.alambreHtml);
                }
            }
        }

            // Restaura al cargar y luego auto‑respalda cada 30s
            restoreIfExists();
            setInterval(backupForm, 30000);

            // ───────── PREVENT UNLOAD (MEJORADO) ─────────
            function beforeUnloadHandler(e) {
                const hasRows = $('#tblProduccion tbody tr').length > 0 || $('#tblAlambreProduccion tbody tr').length > 0;
                const isDirty = $('#frmProduccion').serialize() !== '';
                if (hasRows || isDirty) {
                    e.preventDefault();
                    e.returnValue = '';
                }
            }
            window.addEventListener('beforeunload', beforeUnloadHandler);

            $('#btnRegresar').off('click').on('click', function() {
                const url = $(this).data('url');
                if (confirm('¿Deseas salir sin guardar? Se perderán los datos .')) {
                    // 1) Borra el draft
                    localStorage.removeItem(DRAFT_KEY);
                    // 2) Quita el beforeunload para no volver a pedir confirm
                    window.removeEventListener('beforeunload', beforeUnloadHandler);
                    // 3) Navega
                    window.location.href = url;
                }
                // si cancela, no pasa nada y conserva el borrador
            });

            // ──────────END AUTOSAVE / RESTORE /PREVENT EXIT (MEJORADO) ───────────


                 function validarUnDecimal(input) {
          // Elimina caracteres no válidos (solo dígitos y punto)
          let valor = input.value.replace(/[^0-9.]/g, '');

          // Si hay más de un punto, conserva solo el primero
          let partes = valor.split('.');
          if (partes.length > 2) {
            valor = partes[0] + '.' + partes[1];
          }

          // Si existe el punto, limita la parte decimal a 1 dígito
          if (valor.includes('.')) {
            let [entero, decimal] = valor.split('.');
            decimal = decimal.substring(0, 2); // conserva solo el primer dígito
            valor = entero + '.' + decimal;
          }

          input.value = valor;
        }

                function validarSoloEnteros(input) {
            // Elimina cualquier caracter que no sea un dígito
            input.value = input.value.replace(/[^0-9]/g, '');
        }

             $('#ConteoInicial').on('input', function() {
            validarSoloEnteros(this);
        });

        $('#ConteoFinal').on('input', function() {
            validarSoloEnteros(this);
        });

                $('#modal-Detalle').on('shown.bs.modal', function () {
                  
            $("#IdTipoFabricacion").select2({
                placeholder: "- Selecione un Tipo Fabricacion -",
                allowClear: true,
                dropdownParent: $("#modal-Detalle")
            });

            $("#IdArticulo").select2({
                placeholder: "- Selecione un articulo -",
                allowClear: true,
                dropdownParent: $("#modal-Detalle")
            });
        });





                           $("#IdUsuarios").select2({
            placeholder: "- Selecciona los operarios -",
            allowClear:true
        });

                          $("#IdMaquina").select2({
            placeholder: "- Seleccione una maquina -",
            allowClear:true
        });


        $("#IdTipoFabricacion").change(function () {
            var selectedValue = $(this).val();
            if (selectedValue == 2) {
                $("#divNumeroPedido").show();
            } else {
                $("#divNumeroPedido").hide();
            }
        });



            //    $("#frmProduccion").submit(function (e) {
            //     e.preventDefault(); // Evita el envío normal

            //     // Obtener el token anti-forgery
            //     var token = $('input[name="__RequestVerificationToken"]').val();
            //     // Serializar los datos del formulario a un objeto
            //     var formData = $(this).serializeArray();
            //     var data = {};
            //     $.each(formData, function (index, item) {
            //         data[item.name] = item.value;
            //     });

            //     $.ajax({
            //         url: $(this).attr("action"),
            //         type: "POST",
            //         data: $(this).serialize(),
            //         headers: { "RequestVerificationToken": token },
            //         success: function (response) {
            //             if (response.success) {
            //                 alert(response.message);
            //                  window.location.href = '@Url.Action("Index", "Home")';

            //             } else {
            //                 alert("Ocurrió un problema al guardar la producción, Contacte a Soporte.");
            //             }
            //         },
            //         error: function (xhr, status, error) {
            //             alert("Error al guardar la producción. Contacte a Soporte");
            //         }
            //     });
            // });


                  $("#btnGuardarDetPrd").click(function () {
            // Limpiar mensajes de error previos
            $("#spnbtnGuardarDetPrd").text("");

            // Obtener valores de los controles y eliminamos espacios en blanco
            var idArticulo = $("#IdArticulo").val().trim();
            var articuloText = $("#IdArticulo option:selected").text().trim();
            var cantidadProducida = $("#CantidadProducida").val().trim();
            var cantidadNoConforme = $("#CantidadNoConforme").val().trim();
            var idTipoFabricacion = $("#IdTipoFabricacion").val().trim();
            var tipoFabricacionText = $("#IdTipoFabricacion option:selected").text().trim();
            var numeroPedido = "";

            // Si el campo "Número Pedido" es visible, obtener su valor
            if ($("#divNumeroPedido").is(":visible")) {
                numeroPedido = $("#NumeroPedido").val().trim();
            }

            // Validar que los campos requeridos no estén vacíos
            if (idArticulo === "") {
                $("#spnbtnGuardarDetPrd").text("Seleccione un artículo.");
                return false;
            }
            if (cantidadProducida === "") {
                $("#spnbtnGuardarDetPrd").text("Ingrese la cantidad producida.");
                return false;
            }
            if (cantidadNoConforme === "") {
                $("#spnbtnGuardarDetPrd").text("Ingrese la cantidad no conforme.");
                return false;
            }
            if (idTipoFabricacion === "") {
                $("#spnbtnGuardarDetPrd").text("Seleccione un tipo de fabricación.");
                return false;
            }
            if ($("#divNumeroPedido").is(":visible") && numeroPedido === "") {
                $("#spnbtnGuardarDetPrd").text("Ingrese el número de pedido.");
                return false;
            }

            // Crear la nueva fila a insertar en la tabla,
            // se incluyen celdas visibles y dos celdas ocultas para guardar los id´s
            var newRow = "<tr>" +
                "<td>" + articuloText + "</td>" +
                "<td>" + cantidadProducida + "</td>" +
                "<td>" + cantidadNoConforme + "</td>" +
                "<td>" + tipoFabricacionText + "</td>" +
                "<td>" + (numeroPedido ? numeroPedido : "") + "</td>" +
                "<td style='display:none;'>" + idArticulo + "</td>" +
                "<td style='display:none;'>" + idTipoFabricacion + "</td>" +
                "</tr>";

            // Agregar la nueva fila al tbody de la tabla sin eliminar las filas anteriores
            $("#tblProduccion tbody").append(newRow);

            // Limpiar los controles del formulario
            $("#frmDetPrd")[0].reset();

            // Opcional: Si "Número Pedido" debe ocultarse de nuevo después de guardar
            $("#divNumeroPedido").hide();
              $("#modal-Detalle").modal('hide');
        });

                $("#btnGuardarDetAlalmbre").click(function () {
            // Limpiar mensaje de error previo
            $("#spnBtnDetAlalmbre").text("");

            // Obtener y limpiar los valores de los campos
            var numeroAlambre = $("#NumeroAlambre").val().trim();
            var pesoAlambre = $("#PesoAlambre").val().trim();


            // Validar que los campos requeridos no estén vacíos
            if (numeroAlambre === "") {
                $("#spnBtnDetAlalmbre").text("Ingrese el número de alambre.");
                return false;
            }
            if (pesoAlambre === "") {
                $("#spnBtnDetAlalmbre").text("Ingrese el peso del alambre.");
                return false;
            }


            // Crear la nueva fila para la tabla
            var newRow = "<tr>" +
                "<td>" + numeroAlambre + "</td>" +
                "<td>" + pesoAlambre + "</td>" +

                "</tr>";

            // Agregar la nueva fila al cuerpo de la tabla sin eliminar los datos anteriores
            $("#tblAlambreProduccion tbody").append(newRow);

            // Limpiar el formulario
            $("#frmDetAlambre")[0].reset();

            // Ocultar el modal
            $("#modal-DetalleAlambre").modal('hide');
        });


                  $("#frmProduccion").submit(function (e) {
            e.preventDefault();

            // Obtener el token antiforgery (asegúrate de que tu formulario incluya @Html.AntiForgeryToken())
            var token = $('input[name="__RequestVerificationToken"]').val();

            // Recoger los datos del formulario (registro maestro)
            var viewModel = {
                // Los select con atributo multiple devolverán un arreglo de valores
                IdUsuarios: $("#IdUsuarios").val(),
                IdMaquina: $("#IdMaquina").val(),
                Fecha: $("#Fecha").val(),
                Observaciones: $("#Observaciones").val(),
                MermaAlambre:$("#MermaAlambre").val(),
                ConteoInicial:$("#ConteoInicial").val(),
                 ConteoFinal:$("#ConteoFinal").val(),
                   TiempoParo:$("#TiempoParo").val(),
                // Inicializar arreglos para los detalles
                DetPrdCerchaCovintec: [],
                DetAlambrePrdCerchaCovintec: []
            };

            // Recoger los detalles de producción desde la tabla (#tblProduccion)
            // Se asume que la fila contiene:
            // [0]: Artículo (texto) - opcional, [1]: Cantidad Producida, [2]: Cantidad No Conforme,
            // [3]: Tipo Fabricación (texto) - opcional, [4]: Número Pedido,
            // [5]: IdArticulo (oculto), [6]: IdTipoFabricacion (oculto)
            $("#tblProduccion tbody tr").each(function () {
                var detalle = {
                    IdArticulo: parseInt($(this).find("td:eq(5)").text()),
                    CantidadProducida: parseInt($(this).find("td:eq(1)").text()),
                    CantidadNoConforme: parseInt($(this).find("td:eq(2)").text()),
                    IdTipoFabricacion: parseInt($(this).find("td:eq(6)").text()),
                    NumeroPedido: $(this).find("td:eq(4)").text() !== "" ? parseInt($(this).find("td:eq(4)").text()) : null
                };
                viewModel.DetPrdCerchaCovintec.push(detalle);
            });

            // Recoger los detalles de alambre desde la tabla (#tblAlambreProduccion)
            // Se asume que la fila contiene:
            // [0]: Número Alambre, [1]: Peso Alambre, [2]: Merma Alambre
            $("#tblAlambreProduccion tbody tr").each(function () {
                var detalleAl = {
                    NumeroAlambre: parseInt($(this).find("td:eq(0)").text()),
                    PesoAlambre: parseFloat($(this).find("td:eq(1)").text())

                };
                viewModel.DetAlambrePrdCerchaCovintec.push(detalleAl);
            });

            // Enviar la información vía AJAX al método Create del controlador
            $.ajax({
                url: '/PrdCerchaCovintec/Create', // Asegúrate de que la URL coincida con tu ruta
                type: 'POST',
                headers: {
                    'RequestVerificationToken': token
                },
                data: JSON.stringify(viewModel),
                contentType: 'application/json; charset=utf-8',
                success: function (response) {
                     // ══════════════ LIMPIAR BORRADOR (MEJORADO) ══════════════
                     localStorage.removeItem(DRAFT_KEY);
                     // ——— NUEVO: desactivar el aviso de "Leave site?" al salir ———
                     window.removeEventListener('beforeunload', beforeUnloadHandler);
                     // ════════════════════════════════════════════
                    alert('Produccion Guardada!');
                    window.location.href = '@Url.Action("Index", "Home")';
                },
                error: function (xhr, status, error) {
                    alert('Error , Contacte a soporte!');
                }
            });
        });



    </script>


}
