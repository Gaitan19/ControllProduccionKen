@using Infrastructure.DTO
@model IEnumerable<PrdBloquesReporteDTO>

@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
    ViewData["Title"] = "Reporte Bloques";
}
<style>
    body {
        font-family: Arial, sans-serif;
        background-color: #f6f8fa;
        margin: 0;
        padding: 0;
    }

    .container {
        width: 90%;
        max-width: 1200px;
        margin: 20px auto;
        background-color: #fff;
        padding: 20px;
        border-radius: 6px;
        box-shadow: 0 2px 5px rgba(0,0,0,0.1);
    }

    h1 {
        text-align: center;
        margin-bottom: 30px;
    }

    /* Encabezado del reporte */
    .report-header {
        border-collapse: collapse;
        width: auto; /* ancho dinámico según contenido */
        table-layout: auto; /* ajusta el ancho según el contenido */
        margin-bottom: 25px;
    }

        .report-header thead th {
            background-color: #f2f2f2;
            text-transform: uppercase;
            font-weight: bold;
            padding: 10px 15px;
            text-align: left;
        }

        .report-header td,
        .report-header th {
            border: 1px solid #e1e1e1;
            padding: 8px 15px;
            white-space: nowrap; /* evita saltos de línea innecesarios */
        }

    .header-title {
        font-weight: bold;
        background-color: #b0f7cc;
        padding: 12px;
        margin-bottom: 10px;
        border-radius: 4px;
    }

    /* Secciones de Detalles */
    .section-title {
        font-weight: bold;
        padding: 12px;
        background-color: #d9ecff;
        margin-top: 20px;
        margin-bottom: 5px;
        border-radius: 4px;
    }

    .details-table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 20px;
    }

        .details-table th {
            background-color: #f2f2f2;
            text-transform: uppercase;
            font-weight: bold;
            padding: 10px 12px;
            text-align: left;
            border: 1px solid #e1e1e1;
        }

        .details-table td {
            border: 1px solid #e1e1e1;
            padding: 10px 12px;
        }

    /* Subsección de Subdetalles */
    .subsection-title {
        font-weight: bold;
        padding: 8px;
        background-color: #fff2cc;
        margin-top: 15px;
        margin-bottom: 5px;
        border-radius: 4px;
        font-size: 14px;
    }

    .subdetails-table {
        width: 100%;
        border-collapse: collapse;
        margin-bottom: 15px;
        font-size: 13px;
    }

        .subdetails-table th {
            background-color: #f8f8f8;
            text-transform: uppercase;
            font-weight: bold;
            padding: 8px 12px;
            text-align: left;
            border: 1px solid #e1e1e1;
            font-size: 12px;
        }

        .subdetails-table td {
            border: 1px solid #e1e1e1;
            padding: 8px 12px;
        }

    /* Sección de firmas */
    .signatures {
        margin-top: 40px;
    }

        .signatures table {
            width: 100%;
            border-collapse: collapse;
        }

        .signatures td {
            padding-top: 40px;
            text-align: center;
            vertical-align: bottom;
        }

    .signature-line {
        border-top: 1px solid #000;
        width: 60%; /* Línea un poco más corta */
        margin: 0 auto 5px auto;
    }

    .signature-label {
        display: block;
        text-align: center;
        font-weight: bold;
    }

    .ibox-title {
        display: flex;
        align-items: center;
    }

        .ibox-title .col-sm-3 {
            flex: 0 0 auto;
            margin-right: 15px;
        }
</style>


<div class="col-md-15 offset-md-1">
    <div class="ibox">
        <div class="ibox-title">
            <div class="col-sm-3">
                <input id="datesReport" name="datesReport" runat="server" autocomplete="off" class="form-control" />
            </div>
            <div class="col-sm-3">  
                <button id="btnDescargar" class="dt-button buttons-csv buttons-html5 btn btn-outline btn-success btn-xs" tabindex="0" aria-controls="DataTables_Table_0" type="button">
                    <span><i class="fa fa-download"></i> .PDF</span>
                </button>
            </div>
        </div>
        <div id="divMainReportAll" class="ibox-content table-responsive">

        
            @foreach (var reporte in Model)
            {
                <div class="report-page">
                    <!-- Logo de la empresa -->
                    <h1>Reporte de Producción Bloques</h1>
                    <img src="~/logoEcotec.png" alt="Logo Ecotec" style="width:150px; height:50px;">
                    <br />
                    <br />
                    
                    <!-- Encabezado del Reporte -->
                    <table class="report-header">
                        <thead>
                            <tr>
                                <th>CAMPO</th>
                                <th>VALOR</th>
                            </tr>
                        </thead>
                        <tbody>
                            <tr>
                                <td>Operarios</td>
                                <td>@reporte.Operarios</td>
                            </tr>
                            <tr>
                                <td>Fecha</td>
                                <td>@reporte.Fecha.ToString("yyyy-MM-dd")</td>
                            </tr>
                            <tr>
                                <td>Tiempo Paro (Horas)</td>
                                <td>@reporte.TiempoParo</td>
                            </tr>
                            <tr>
                                <td>Validador</td>
                                <td>@reporte.Supervisor</td>
                            </tr>
                            <tr>
                                <td>Jefe Producción</td>
                                <td>@reporte.JefeProd</td>
                            </tr>
                        </tbody>
                    </table>

                    <!-- Detalles de Bloques -->
                    @foreach (var detalle in reporte.Detalles)
                    {
                        <div class="section-title">Detalle de Producción - @detalle.Articulo</div>
                        <table class="details-table">
                            <thead>
                                <tr>
                                    <th>Artículo</th>
                                    <th>Máquina</th>
                                    <th>Producción del Día (kg)</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr>
                                    <td>@detalle.Articulo</td>
                                    <td>@detalle.Maquina</td>
                                    <td>@detalle.ProduccionDia.ToString("N2")</td>
                                </tr>
                            </tbody>
                        </table>

                        <!-- Subdetalles de Bloques -->
                        @if (detalle.SubDetalles != null && detalle.SubDetalles.Any())
                        {
                            <div class="subsection-title">Subdetalle de Producción</div>
                            <table class="subdetails-table">
                                <thead>
                                    <tr>
                                        <th>No.</th>
                                        <th>Silo</th>
                                        <th>Código Bloque</th>
                                        <th>Artículo</th>
                                        <th>Tipo Fabricación</th>
                                        <th>N° Pedido</th>
                                        <th>Peso (kg)</th>
                                        <th>Hora</th>
                                        <th>Tipo Bloque</th>
                                        <th>Densidad</th>
                                        <th>Observaciones</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var subdetalle in detalle.SubDetalles)
                                    {
                                        <tr>
                                            <td>@subdetalle.No</td>
                                            <td>@subdetalle.Silo</td>
                                            <td>@subdetalle.CodigoBloque</td>
                                            <td>@subdetalle.Articulo</td>
                                            <td>@subdetalle.TipoFabricacion</td>
                                            <td>@(subdetalle.NumeroPedido?.ToString() ?? "-")</td>
                                            <td>@subdetalle.Peso.ToString("N2")</td>
                                            <td>@To12HourFormat(subdetalle.Hora)</td>
                                            <td>@subdetalle.TipoBloque</td>
                                            <td>@subdetalle.Densidad</td>
                                            <td>@(subdetalle.Observaciones ?? "-")</td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        }
                    }

                    @if (reporte == Model.Last())
                    {
                        <!-- Sección de Firmas -->
                        <div class="signatures">
                            <table>
                                <tr>
                                    <td>
                                        <div class="signature-line"></div>
                                        <span class="signature-label">Operario</span>
                                    </td>
                                    <td>
                                        <div class="signature-line"></div>
                                        <span class="signature-label">Supervisor</span>
                                    </td>
                                    <td>
                                        <div class="signature-line"></div>
                                        <span class="signature-label">Jefe de Producción</span>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    }

                </div>
            }

        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");

        var startParam = ViewContext.HttpContext.Request.Query["start"].ToString();
        var endParam = ViewContext.HttpContext.Request.Query["end"].ToString();

        // var defaultStartDate = string.IsNullOrEmpty(startParam)
        //     ? DateTime.Now.AddDays(-1).ToString("MM/dd/yyyy")
        //     : startParam;

        // var defaultEndDate = string.IsNullOrEmpty(endParam)
        //     ? DateTime.Now.ToString("MM/dd/yyyy")
        //     : endParam;


        // Parse and validate date parameters

        DateTime startDate, endDate;

        if (!DateTime.TryParse(startParam, out startDate) || startDate < new DateTime(1753, 1, 1))
        {
            startDate = DateTime.Now.AddDays(-1);
        }

        if (!DateTime.TryParse(endParam, out endDate) || endDate < new DateTime(1753, 1, 1))
        {
            endDate = DateTime.Now;
        }

        var defaultStartDate = startDate.ToString("MM/dd/yyyy");
        var defaultEndDate = endDate.ToString("MM/dd/yyyy");

    }
    <script src="~/js/html2canvas.min.js"></script>
    <script src="~/js/jspdf.umd.min.js"></script>
    <script>
        $(function () {
            var start = moment('@defaultStartDate');
            var end = moment('@defaultEndDate');

            $('#datesReport').daterangepicker({
                startDate: start,
                endDate: end,
                ranges: {
                    'Hoy': [moment(), moment()],
                    'Ayer': [moment().subtract(1, 'days'), moment().subtract(1, 'days')],
                    'Ultimos 7 dias': [moment().subtract(6, 'days'), moment()],
                    'Ultimos 30 dias': [moment().subtract(29, 'days'), moment()],
                    'Este Mes': [moment().startOf('month'), moment().endOf('month')],
                    'Mes pasado': [moment().subtract(1, 'month').startOf('month'), moment().subtract(1, 'month').endOf('month')]
                }
            });

            // Al aplicar un nuevo rango, se redirige a la acción con los parámetros
            $('#datesReport').on('apply.daterangepicker', function(ev, picker) {
                window.location.href = '@Url.Action("GetDataReport", "PrdBloques")'
                    + '?start=' + picker.startDate.format('YYYY-MM-DD')
                    + '&end=' + picker.endDate.format('YYYY-MM-DD');
            });
        });

        document.getElementById('btnDescargar').addEventListener('click', async function() {
            // Crear una instancia de jsPDF
            var pdf = new jspdf.jsPDF('p', 'mm', 'letter');
            var pageWidth = pdf.internal.pageSize.getWidth();
            var pageHeight = pdf.internal.pageSize.getHeight();

            // Selecciona todos los contenedores de reporte
            var reportPages = document.querySelectorAll('.report-page');

            // --- Inicio: Modificación Temporal ---
            const originalStyles = []; // Para guardar los estilos originales
            const fixedWidth = '1024px'; // O el ancho que consideres "escritorio" o necesario para ver todo

            reportPages.forEach(page => {
                originalStyles.push({ element: page, style: page.style.cssText }); // Guarda estilo inline actual
                page.style.width = fixedWidth;
                page.style.maxWidth = fixedWidth; // Asegura que no se limite por otras reglas
                // Podrías necesitar añadir más estilos aquí para forzar la visibilidad
                // de elementos que se ocultan en móvil, por ejemplo:
                // page.querySelectorAll('.elemento-oculto-en-movil').forEach(el => el.style.display = 'block');
            });
            // --- Fin: Modificación Temporal ---

            // Procesa cada reporte individualmente
            var isFirstPdfPage = true; // Controla si agregamos nueva página
            for (var i = 0; i < reportPages.length; i++) {
                // Renderiza el contenedor actual en un canvas con html2canvas
                var canvasOptions = {
                    scale: 2, // Mejora resolución
                    useCORS: true,
                    // Intenta simular un viewport más ancho
                    windowWidth: 1200, // Un ancho típico de escritorio en píxeles
                    // Opcional: Forzar el ancho del canvas resultante (puede escalar, no siempre arregla layout)
                    // width: 1200,
                    scrollX: 0,
                    scrollY: -window.scrollY // Capturar desde la parte superior
                };

                var canvas = await html2canvas(reportPages[i], canvasOptions);

                // Ajustar la imagen respetando márgenes y múltiples páginas
                var margin = 10; // margen en mm
                var canvasWidth = canvas.width;
                var canvasHeight = canvas.height;
                var imgWidth = pageWidth - margin * 2;
                var scale = imgWidth / canvasWidth;
                var pageHeightAvailable = pageHeight - margin * 2;
                var sliceHeight = pageHeightAvailable / scale; // Alto en px de cada página

                var pageCanvas = document.createElement('canvas');
                var pageCtx = pageCanvas.getContext('2d');
                pageCanvas.width = canvasWidth;

                var renderedHeight = 0;
                while (renderedHeight < canvasHeight) {
                    var currentHeight = Math.min(sliceHeight, canvasHeight - renderedHeight);
                    pageCanvas.height = currentHeight;
                    pageCtx.clearRect(0, 0, canvasWidth, currentHeight);
                    pageCtx.drawImage(canvas, 0, renderedHeight, canvasWidth, currentHeight, 0, 0, canvasWidth, currentHeight);
                    var imgData = pageCanvas.toDataURL('image/png');

                    if (!isFirstPdfPage) {
                        pdf.addPage();
                    }

                    pdf.addImage(imgData, 'PNG', margin, margin, imgWidth, currentHeight * scale);
                    renderedHeight += currentHeight;
                    isFirstPdfPage = false;
                }
            }

            // Restaurar estilos originales
            reportPages.forEach((page, idx) => {
                page.style.cssText = originalStyles[idx].style;
            });

            pdf.save('ReporteProduccionBloques.pdf');
        });

    </script>

}

@functions {
    public static string To12HourFormat(TimeSpan hora)
    {
        var dateTime = DateTime.Today.Add(hora);
        return dateTime.ToString("hh:mm tt");
    }
}
